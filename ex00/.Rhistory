df_filter <- df_mpg %>% filter(avg < 20 | grade == 'C')
dim(df_filter)
table(df_filter$avg)
qplot(table(df_filter$avg))
1 in (1,2,3)
df_filter <- df_mpg %>% filter(grade == 'C' or grade == 'A')
df_filter <- df_mpg %>% filter(grade == 'C' | grade == 'A')
df_filter
str(df_filter)
View(df_filter)
table(df_mpg$drv)
df_filter <- df_mpg %>% filter(drv == 'r' | drv == '4')
table(df_mpg$drv)
table(df_filter$drv)
df_new <- data.frame(eng <- c(1,2,3), math <- c(4,5,6))
ls()
eng
math
df_new
rm(df_new, eng, math)
ls()
1 %in% (1,2,3)
1 %in% c(1,2,3)
2**2
2^2
2/2
3/2
3 %/% 2
3 %% 2
3 % 2
3 %% 2
df_filter <- df_mpg %>% select(cty, highway)
df_filter <- df_mpg %>% select(city, highway)
df_filter <- df_mpg %>% select(city)
head(df_mpg)
df_filter <- df_mpg %>% select(model, drv, cyl, avg, grade)
df_filter <- df_mpg %>% select(-manufacturer, -displ)
df_filter <-
df_mpg %>%
filter(avg <=20) %>%
filter(grade == 'B') %>%
select(model, drv, avg, grade)
df_filter <-
df_mpg %>%
filter(avg >= 20) %>%
select(model, drv, avg, grade) %>%
head()
df_mpg %>% filter(avg >= 20)
df_mpg %>% filter(avg >= 20) %>% head
df_mpg %>% filter(avg >= 20) %>% head(10)
df_mpg %>% filter(avg >= 20) %>% tail
df_mpg %>% filter(avg >= 20) %>% tail(20)
df_filter <- df_mpg
df_filter <-
df_mpg %>%
select(drv, displ, avg) %>%
filter(avg <= 20)
str(df_filter)
df_filter <-
df_filter <-
df_mpg %>%
filter(avg >= 20) %>%
df_filter <-
df_mpg %>%
filter(avg >= 20) %>%
arrange(avg)
df_mpg %>% arrange(avg)
head(df_mpg %>% arrange(avg))
(df_mpg %>% arrange(avg))
head(df_mpg %>% arrange(avg))
head(df_mpg %>% arrange(desc(avg))
head(df_mpg %>% arrange(desc(avg)))
df_filter <- df_mpg %>% arrange(desc(avg))
df_filter$avg
df_filter$avg[0]
df_filter <- df_mpg %>% arrange(desc(avg), total)
head(df_filter)
df_mpg$city
df_filter <- df_mpg %>% arrange(desc(city), asc(avg))
df_filter <- df_mpg %>% arrange(desc(city), avg)
View(df_filter)
df_mpg <- as.data.frame(ggplot2::mpg)
str(df_mpg)
head(df_mpg)
df_filter <- df_mpg %>% mutate(total = (cty+hwy)/2)
df_filter <- df_mpg %>% mutate(total = (cty+hwy)/2) %>% mutate(grade = ifelse(test >= 20, 'Y', 'N'))
df_filter <- df_mpg %>% mutate(total = (cty+hwy)/2) %>% mutate(test = ifelse(total >= 20, 'Y', 'N'))
table(df_filter$test)
qplot(table(df_filter$test))
hist(df_filter$test)
qplot(df_filter$test)
df_filter <-
df_mpg %>%
mutate(tot = (cty+hwy)/2, test=ifelse(tot>=20, 'Y', 'N'))
hist(df_filter$test)
qplot(df_filter$test)
df_filter <-
df_mpg %>%
mutate(tot = (cty+hwy)/2, test=ifelse(tot>=20, 'Y', 'N')) %>%
arrange(desc(tot)) %>%
df_filter <-
df_mpg %>%
mutate(tot = (cty+hwy)/2, test=ifelse(tot>=20, 'Y', 'N')) %>%
arrange(desc(tot)) %>%
head(10)
df_filter <-
df_mpg %>%
mutate(tot = (cty+hwy)/2, test=ifelse(tot>=20, 'Y', 'N')) %>%
arrange(desc(tot))
df_filter <-
df_mpg %>%
mutate(tot = (cty+hwy)/2, test=ifelse(tot>=20, 'Y', 'N')) %>%
arrange(desc(tot)) %>% head
df_filter <-
df_mpg %>%
mutate(tot = (cty+hwy)/2, test=ifelse(tot>=20, 'Y', 'N')) %>%
arrange(desc(tot)) %>%
head(20)
df_mpg %>%
mutate(tot=(cty+hwy)/2) %>%
arrange(desc(tot)) %>%
head(20) %>%
summarise(average=mean(tot))
df_mpg %>%
mutate(tot=(cty+hwy)/2) %>%
arrange(desc(tot)) %>%
head(20) %>%
summarise(average=median(tot))
df_mpg %>%
mutate(tot=(cty+hwy)/2) %>%
arrange(desc(tot)) %>%
head(20) %>%
summarise(midval=median(tot))
df_mpg %>%
mutate(tot=(cty+hwy)/2) %>%
arrange(desc(tot)) %>%
head(20) %>%
summarise(maxval=max(tot))
df_mpg %>%
mutate(tot=(cty+hwy)/2) %>%
arrange(desc(tot)) %>%
head(20) %>%
summarise()
summarise(df_mpg$cty)
summarize(df_mpg$cty)
summary(df_mpg$cty)
df_mpg %>%
mutate(tot=(cty+hwy)/2) %>%
arrange(desc(tot)) %>%
head(20) %>%
summary(tot)
df_mpg %>%
mutate(tot=(cty+hwy)/2) %>%
arrange(desc(tot)) %>%
head(20) %>%
summary
df_mpg %>%
mutate(tot=(cty+hwy)/2) %>%
arrange(desc(tot)) %>%
head(20) %>%
summary(hwy)
df_mpg %>%
mutate(tot=(cty+hwy)/2) %>%
arrange(desc(tot)) %>%
head(20) %>%
summary
df_mpg %>%
mutate(tot=(cty+hwy)/2) %>%
arrange(desc(tot)) %>%
head(2) %>%
summary
head(df_mpg)
df_mpg %>%
mutate(grade, ifelse((cty+hwy)/2 >=20, 'A', 'B')) %>%
group_by(grade) %>%
count()
df_mpg %>%
mutate(grade = ifelse((cty+hwy)/2 >=20, 'A', 'B')) %>%
group_by(grade) %>%
count()
df_mpg %>%
mutate(grade = ifelse((cty+hwy)/2 >=20, 'A', 'B')) %>%
group_by(grade) %>%
count(cnt)
df_mpg %>%
mutate(grade = ifelse((cty+hwy)/2 >=20, 'A', 'B')) %>%
group_by(grade) %>%
count(cnt = n)
df_mpg %>%
mutate(grade = ifelse((cty+hwy)/2 >=20, 'A', 'B')) %>%
group_by(grade) %>%
count()
df_mpg %>%
mutate(grade = ifelse((cty+hwy)/2 >=20, 'A', 'B')) %>%
group_by(grade) %>%
count() %>%
rename(cnt = n)
df_mpg %>% group_by(drv) %>% summarise(avg = mean((cty+hwy)/2))
df_mpg %>% group_by(drv) %>% summarise(avg = mean((cty+hwy)/2), cnt = n())
df_mpg %>% group_by(drv) %>% summarise(avg = mean((cty+hwy)/2), cnt = n(), max(avg))
df_mpg %>% group_by(drv) %>% summarise(avg = mean((cty+hwy)/2), cnt = n(), maxavg = max(avg))
df_mpg %>% group_by(drv) %>% summarise(avg = mean((cty+hwy)/2), cnt = n(), maxavg = max((cty+hwy)/2))
df_mpg %>% group_by(drv) %>% summarise(avg = mean((cty+hwy)/2), cnt = n(), max = max((cty+hwy)/2))
df_mpg %>% mutate(tot=cty+hwy/2) %>% summarise(avg=mean(tot), min(tot), max(tot), cnt=n())
df_mpg %>% mutate(tot=cty+hwy/2) %>% group_by(drv) %>% summarise(avg=mean(tot), min(tot), max(tot), cnt=n())
df_mpg %>% mutate(tot=cty+hwy/2) %>% group_by(drv) %>% summarise(avg=mean(tot), min=min(tot), max=max(tot), cnt=n())
df_mpg %>%
mutate(tot=cty+hwy/2) %>%
group_by(drv) %>%
summarise(mean=mean(tot), min=min(tot), max=max(tot), median(tot), sd(tot), median=median(tot), cnt=n())
df_mpg %>%
mutate(tot=cty+hwy/2) %>%
group_by(drv) %>%
summarise(mean=mean(tot), min=min(tot), max=max(tot), median=median(tot), sd=sd(tot), median=median(tot), cnt=n())
df_mpg %>%
mutate(tot=cty+hwy/2) %>%
group_by(drv) %>%
summarise(mean=mean(tot), min=min(tot), max=max(tot), median=median(tot), sd=sd(tot), median=median(tot), cnt=n()) %>% as.data.frame()
df_mpg %>%
mutate(tot=cty+hwy/2) %>%
group_by(drv) %>%
summarise(mean=mean(tot), min=min(tot), max=max(tot), median=median(tot), sd=sd(tot), median=median(tot), cnt=n()) %>% as.data.frame()[0]
df_filter <- df_mpg %>%
mutate(tot=cty+hwy/2) %>%
group_by(drv) %>%
summarise(mean=mean(tot), min=min(tot), max=max(tot), median=median(tot), sd=sd(tot), median=median(tot), cnt=n()) %>% as.data.frame()
df_filter[0]
df_filter <-
df_mpg %>%
group_by(manufacturer, drv) %>%
summarise(mean_cty=mean(cty)) %>%
head(10)
df_filter <-
df_mpg %>%
group_by(manufacturer) %>%
filter(class == 'suv') %>%
mutate(tot=cty+hwy/2) %>%
summarise(mean_tot = mean(tot)) %>%
arrange(desc(mean_tot)) %>%
head(20)
df_mid <- data.frame(
id = c(1:5),
mid = c(1:50)
)
head(df_mid)
summary(df_mid)
df_final <- data.frame(
id=c(1:5),
final = c(51, 100)
)
df_final <- data.frame(
id=c(1:5),
final = c(51:100)
)
head(df_final)
df_mid <- data.frame(
id = c(1:5),
midterm = c(1:5)*10
)
df_mid
df_final <- data.frame(
id = c(1:5),
final = c(6:10)*10
)
df_final
left_join(df_mid, df_final, by=id)
left_join(df_mid, df_final, by='id')
df_mid %>% left_join(df_final, by='id')
df_name = data.frame(
id = c(1:5),
name = c('N1','N2', 'N3', 'N4', 'N5')
)
df_name
df_mid
df_final
df_score <- df_mid %>% left_join(df_final, by='id') %>% left_join(df_name, by='id')
df_Score
df_mod %>% left_join(df_final, by='id')
df_mid %>% left_join(df_final, by='id')
df_mid %>% left_join(df_final, by='id') %>% left_join(df_name, by='id')
df_mid
df_final
bind_rows(df_mid, df_final)
rename(df_mid, score=midterm)
df_mid <- rename(df_mid, score=midterm)
df_final <- rename(df_final, score=final)
df_mid;df_final
bind_rows(df_mid, df_final)
bind_cols(df_mid, df_final)
bind_cols(df_mid, df_final, by='id')
bind_cols(df_mid, df_final)
ls()
rm(list=ls())
ls()
df_fuel <- data.frame(
fl = c('c','d','e','p','r'),
price = c(1,2,3,4,5)
)
df_fuel
str(df_fuel)
table(df_fuel$fl)
df_fuel <- data.frame(
fl = c('c','d','e','p','r'),
price = c(1,2,3,4,5),
stringsAsFactors = F
)
df_fuel
str(df_fuel)
df_fuel <- data.frame(
fl = c('c','d','e','p','r'),
price = c(1,2,3,4,5)
)
str(df_fuel)
df_fuel$fl
df_fuel$fl[0]
table(df_fuel$fl)
level(df_fuel)
level(df_fuel$fl)
levels(df_fuel$fl)
q()
install.packages("Rcpp")
df <- data.frame(
sex = c('M', 'F', NA, 'M', 'F'),
score = c(5,4,3,4,NA)
)
df
str(df)
df <- data.frame(
sex = c('M', 'F', NA, 'M', 'F'),
score = c(5,4,3,4,NA),
stringsAsFactors = F
)
str(df)
df
df$sex[0]
df$score
df$score[0]
is.na(df)
table(is.na(df))
qplot(table(is.na(df)))
table(is.na(df))
qplot(table(is.na(df)))
library(ggplot2)
ggplot2::qplot(table(is.na(df)))
table(df)
df
table(df)
is.na(df)
table(is.na(df))
ggplot2::qplot(table(is.na(df)) )
hist(table(is.na(df)) )
hist(table(is.na(df)))
table(df$sex)
table(df$score)
is.na(df$score)
is.na(df$sex)
table(is.na(df$score))
df
df
mean(df$sex)
df$sex[0]
mean(df$score)
sum(df$score)
library(dplyr)
df %>% filter(is.na(score))
df %>% filter(!is.na(score))
df %>% filter(is.na(score) | is.na(sex))
df %>% filter(!is.na(score) & !is.na(sex))
df_nomiss <- df %>% filter(!is.na(score))
df_nomiss
mean(df_nomiss$score)
sum(df_nomiss$score)
na.omit(df)
df_nomiss <- na.omit(df)
df_nomiss
mpg
ls()
rm(list = ls())
ls()
df_mpg <- as.data.frame(ggplot2::mpg)
str(df_mpg)
is.na(df_mpg)
table(is.na(df_mpg))
df
str(df_mpg)
mean(df_mpg$cty, na.rm = T)
summary(df_mpg)
library(readr)
csv_exam <- read_csv("data/csv_exam.csv")
View(csv_exam)
df_exam
rename(csv_exam, df_exam)
df_exam <- csv_exam
rm(csv_exam)
str(df_exam)
df_exam
df_exam[0]
df_exam$math
df_exam[c(0)]
df_exam[c(1)]
df_exam[1]
df_exam[2]
df_exam[c(1,2,3), "math"]
df_exam$math[0]
df_exam$math[1]
head(df_exam)
df_exam$math[2]
df_exam$math[c(3,8,15)]
df_exam[c(3,8,15)]
df_exam[c(3,8,15), "math"]
df_exam$math[c(3,8,15)]
df_exam$math[c(3,8,15)] <- NA
df_exam
df_exam[c(3,8,15), "math"]
df_exam[c(3,8,15), "math"] <- NA
df_exam
df_exam[, "english"]
df_exam["20"]
df_exam[20]
df_exam
df_exam[c(3,8,15)]
df_exam[c(3,8,15):]
df_exam[c(3,8,15):all]
df_exam[c(3,8,15), ]
df_exam[c(3,8,15), ]
df_exam[c(3,8,15), :]
df_exam[c(3,8,15), ]
df_exam
df_exam[c(2,7,4), ]
df_exam[c(2,7,4), 0]
df_exam[c(2,7,4), 1]
df_exam[c(2,7,4), 2]
df_exam[c(2,7,4), "class"]
df_exam %>% filter(is.na(math))
summary(df_exam)
mean(df_exam)
mean(df_exam$math)
mean(df_exam$math, na.rm = T)
df_exam %>% summarise(mean=mean(math))
df_exam %>% summarise(mean=mean(math, na.rm = T))
df_exam[:, ]
df_exam[:]
df_exam[, ]
df_exam[ , ]
df_exam[,]
df_exam[,]
df_exam[,2]
df_exam[,]
df_exam[,1]
df_exam[,2]
df_exam[,3]
df_exam[,3:4]
df_exam[3:4,3:4]
df_exam
df_exam %>% summarise(
mean=mean(math, na.rm = T),
sum=sum(math, na.rm = T),
median=median(math, na.rm = T)
)
mean(df_exam$math, na.rm = T)
df_exam$math <- ifelse(is.na(df_exam$math), 55, df_exam$math)
df_exam
is.na(df_exam$math)
table(is.na(df_exam$math))
mean(df_exam$math)
1000000000000000000000000000000000
install.packages("ggpubr")
install.packages("ggpubr")
#----------------------------------------------------------------------------------------
# 2. To load libraries for correlation analysis.
#----------------------------------------------------------------------------------------
library(ggpubr)  # for a scatter plot
library(dplyr)   # for data munging
#----------------------------------------------------------------------------------------
# 3. To load sample data set from default {datasets} mtcars.
#----------------------------------------------------------------------------------------
df_mtcars <- as.data.frame(datasets::mtcars, stringsAsFactors = F)
mpg_wt <- df_mtcars %>% select(mpg, wt)
class(mpg_wt)
head(mpg_wt, 6)
#----------------------------------------------------------------------------------------
# 4. To visualize sample data using scatter plot {ggpubr} ggscatter function.
#----------------------------------------------------------------------------------------
ggscatter(
data = mpg_wt,
x = 'mpg', y = 'wt',
# "none", "reg.line" (linear regression line), "loess" (local regression fitting)
add = 'loess',
conf.int = T, cor.coef = T, cor.method = 'pearson',
xlab = 'Miles per gallon', ylab = 'Weight (1000 lbs)'
)
shapiro.test(x = mpg_wt$mpg)  # For mpg variable
shapiro.test(x = mpg_wt$wt)   # For wt variable
# Q-Q plot(Quantile-Quantile plot) for mpg variable to check the normality.
ggqqplot(data = mpg_wt$mpg, ylab = "Miles per gallon")
# Q-Q plot(Quantile-Quantile plot) for mpg variable to check the normality.
ggqqplot(data = mpg_wt$wt, ylab = "Weight (1000 lbs)")
PPMC <- cor.test(
mpg_wt$mpg, mpg_wt$wt,
method = 'pearson'
)
#----------------------------------------------------------------------------------------
# t                   : "t-test" statistic value
# df                  : the degrees of freedom
# p-value             : the significance level, "alpha" of the "t-test" : 5%
# sample estimates    : the correlation coefficient ( comprised between -1 and 1 )
# confidence interval : the conf.int of the correlation coefficient at 95%
#----------------------------------------------------------------------------------------
PPMC
?ggscatter
install.packages(c("DT", "ggpubr", "hexbin", "knitr", "R6", "rmarkdown", "roxygen2", "xfun"))
install.packages("roxygen2")
